pipeline {
    agent any
    
    tools {
        jdk 'jdk17'
        maven 'maven3'
    }

    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/mehdichoukri10/projet-gestion-de-stage-d-une-ecole.git'
            }
        }
        
        stage('Compile') {
            steps {
                sh "mvn compile"
            }
        }
        
        stage('Test') {
            steps {
                sh "mvn test"
            }
        }
        
        stage('File System Scan') {
            steps {
                sh "trivy fs --format table -o trivy-fs-report.html ."
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=GestionStage -Dsonar.projectKey=GestionStage \
                            -Dsonar.java.binaries=. '''
                }
            }
        }
        
        stage('Quality Gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
                }
            }
        }
        
        stage('Build') {
            steps {
                sh "mvn package"
            }
        }
        
        stage('Publish To Nexus') {
            steps {
                withMaven(globalMavenSettingsConfig: 'global-settings', jdk: 'jdk17', maven: 'maven3', mavenSettingsConfig: '', traceability: true) {
                    sh "mvn deploy"
                }
            }
        }
        
        stage('Build & Tag Docker Image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh "docker build -t mehdichoukri10/gestion-stage:latest ."
                    }
                }
            }
        }
        
        stage('Docker Image Scan') {
            steps {
                sh "trivy image --format table -o trivy-image-report.html mehdichoukri10/gestion-stage:latest"
            }
        }
        
        stage('Push Docker Image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh "docker push mehdichoukri10/gestion-stage:latest"
                    }
                }
            }
        }
        
        stage('Deploy To Kubernetes') {
            steps {
                withKubeConfig(credentialsId: 'k8s-config') {
                    sh "kubectl apply -f kubernetes/deployment.yaml"
                    sh "kubectl apply -f kubernetes/service.yaml"
                }
            }
        }
        
        stage('Verify Deployment') {
            steps {
                withKubeConfig(credentialsId: 'k8s-config') {
                    sh "kubectl get pods -n default"
                    sh "kubectl get svc -n default"
                }
            }
        }
    }
    
    post {
        always {
            script {
                def jobName = env.JOB_NAME
                def buildNumber = env.BUILD_NUMBER
                def status = currentBuild.result ?: 'UNKNOWN'
                def color = status == 'SUCCESS' ? 'green' : 'red'

                emailext (
                    subject: "Pipeline ${status}: ${jobName} - Build ${buildNumber}",
                    body: """<html>
                        <body>
                        <div style="border: 4px solid ${color}; padding: 10px;">
                        <h2>${jobName} - Build ${buildNumber}</h2>
                        <h3 style="color: ${color};">Status: ${status}</h3>
                        <p>Check the <a href="${BUILD_URL}">build details</a>.</p>
                        </div>
                        </body>
                        </html>""",
                    to: 'me.choukri1234@gmail.com',
                    from: 'jenkins@yourcompany.com',
                    replyTo: 'noreply@yourcompany.com',
                    mimeType: 'text/html',
                    attachmentsPattern: 'trivy-image-report.html'
                )
            }
        }
    }
}